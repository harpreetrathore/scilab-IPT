function startModule()

    TOOLBOX_NAME  = "imageprocessing";
    TOOLBOX_TITLE = "Image Processing Toolbox";

  mprintf("Start " + TOOLBOX_TITLE + "\n");

  if isdef("imageprocessing") then
    warning("Toolbox skeleton library is already loaded");
    return;
  end

  etc_tlbx  = get_absolute_file_path("imageprocessing.start");
  etc_tlbx  = getshortpathname(etc_tlbx);
  root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length("\etc\") );

//Load  functions library
// =============================================================================
  mprintf("\tLoad macros\n");
  pathmacros = pathconvert(root_tlbx+"/macros");
  toolbox_skeletonlib = lib(pathmacros);
  clear pathmacros;

// load gateways and Java libraries
// =============================================================================
  verboseMode = ilib_verbose();
  ilib_verbose(0);
  mprintf("\tLoad gateways\n");
    // load gateways
// =============================================================================

    mprintf("\tLoad gateways\n");
    [a, opt] = getversion();
    Version = opt(2);
    ilib_verbose(0);
    if getos()=="Windows" then
        error(msprintf(gettext("Module is not for Windows.")));
    else
        lib_path = root_tlbx + "/thirdparty/linux/lib/" + Version;
        link(lib_path + "/libopencv_photo.so");
        link(lib_path + "/libopencv_core.so");
        link(lib_path + "/libopencv_highgui.so");
    end
    exec(pathconvert(root_tlbx + filesep() + "sci_gateway" + filesep() + "loader_gateway.sce",%f));
    exec(pathconvert(root_tlbx+"/sci_gateway/loader_gateway.sce",%f));

// load localization
//  addlocalizationdomain(TOOLBOX_NAME, root_tlbx + "/locales");
// Load and add help chapter
// =============================================================================
  if or(getscilabmode() == ["NW";"STD"]) then
    mprintf("\tLoad help\n");
    path_addchapter = pathconvert(root_tlbx+"/jar");
    if ( isdir(path_addchapter) <> [] ) then
      add_help_chapter(TOOLBOX_NAME, path_addchapter, %F);
    end
  end

// Load demos
// =============================================================================
//  if or(getscilabmode() == ["NW";"STD"]) then
//    mprintf("\tLoad demos\n");
//    pathdemos = pathconvert(root_tlbx+"/demos/imageprocessing.dem.gateway.sce", %F, %T);
//    add_demo(TOOLBOX_TITLE, pathdemos);
//  end

// Load Preferences GUI
// =============================================================================
//  if getscilabmode() == "STD" then
//    addModulePreferences(TOOLBOX_TITLE, root_tlbx, etc_tlbx + "imageprocessing_preferences.xml");
//  end

endfunction

startModule();
clear startModule; // remove startModule on stack
